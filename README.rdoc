== README
Final Project - Muser
http://ancient-taiga-6831.herokuapp.com/

A musical notepad. Once registered, a user can post songs on the app, along with the accompanying album art and YouTube video. The user can create a musical profile with their favorite song, lyric, band, etc.

Resources:
1. Users: users can create an account, look up the list of all accounts, edit their profile information, and delete their own account.

2. Songs: users can post songs, see the list of songs, and edit and delete songs they have posted.

Validations
1. For each song, the track name is required
2. For each song, the artist name is required.

Scopes
1. Best songs: songs with a rating of 5
2. Worst songs: songs with a rating of 1
3. Other songs: songs with a rating of 2, 3, or 4

Gems used
1. auto_html: https://github.com/dejan/auto_html
I used it to automatically parse YouTube links into HTML code for an embedded video.

2. devise: https://github.com/plataformatec/devise#getting-started
I used it to create a login system for my app.

3. aaronh-chronic gem http://rubygems.org/gems/aaronh-chronic
I used a natural language date parser to display a date on my app.

Heroku Addons used
1. newrelic: https://devcenter.heroku.com/articles/newrelic
New Relic allows performance management of the app.
 
----------------------- HOMEWORK -----------------------

Issues encountered:

Homework 1
- Creating an index.html in /public did not work. I had to create a new view on the command line to serve as the index page.
- Heroku deployment was troublesome because I forgot about disabling sqlite3 in production.

Homework 2: no issues encountered

Homework 4
- I could not set up a heroku app successfully using rails 3.2.x, even after I confirmed that it worked on localhost. Therefore I had to change the items below to make it work:
  - I could not add new entries to the Users table because in Rails 4, I have to mark the parameters as required, per: http://stackoverflow.com/questions/17335329/activemodelforbiddenattributeserror-when-creating-new-user
  - I could not display entries in the user index because I had to define a show method in the controller, per: http://stackoverflow.com/questions/17992528/error-the-action-show-could-not-be-found-for-postscontroller
  
- Besides the users table covered in lecture, I also created another table named purchases, with columns product:string, price:string, and date:string

Homework 5
- With this homework I could not get past how to use params.require().permit() for nested attributes in Rails 4, so I took the extra time over Fall Break to reattempt a move to Rails 3.2, which was successful this time. Hopefully homework will not 

- With the tasklist table, I encountered a spontaneous error: NoMethodError undefined method name for nil:NilClass on the index. This stems from the line task_list.user.name, which throws an error if the user/name data is corrupted or non-existent. Therefore this error persisted even after I reset to the previous commit. The solution was to drop the table by adding the statement in the migrate file, and run rake db:migrate.
http://stackoverflow.com/questions/10810311/nomethoderror-undefined-method-for-nilnilclass
  
- Currently, there is an error with the edit page for tasklists. The create page works perfectly, but edit does not update the tasklist properly. Jason investigated this with me, and he was unable to find anything. I will ignore this for now and move on to Homework 6  
  
Homework 6
- No issues encountered
- Completed the extra credit

Homework 7
- I added the aaronh-chronic gem (http://rubygems.org/gems/aaronh-chronic), a natural language date parser with time zone support. I defined variables containing output of the parser in the landing pages controller, and displayed them in the home view.

Homework 8
- I installed the New Relic heroku addon
- When I tried to add newrelic.yml, the resulting file in config does not resemble the hosted file at all. I had to copy the file manually into config
- The route was not set up correctly for /newrelic. I found the solution here: http://stackoverflow.com/questions/5432074/newrelic-rpm-rails-gem-showing-no-route-in-development

Homework 9
- Command used to generate todo:
rails generate controller Todos index new edit show
rails generate model Todo title:string priority:string description:string completed:boolean tasklist:belongs_to

Homework 10
- on the todos index view, when the viewer hovers over the priority column label, high priority tasks become crimson, medium priority tasks become green, and low priority tasks become beige